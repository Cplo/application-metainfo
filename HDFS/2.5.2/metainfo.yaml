---
name: HDFS
version: 2.5.2-tdh50
global: false
namePrefix: HDFS
friendlyName: HDFS
dockerImage: "tos/hdfs:rb465-final-tdh-3"
user: hdfs
dependencies:
  - name: ZOOKEEPER
    minVersion: 3.4.5-tdh50
    maxVersion: 3.4.5-tdh50
    optional: false
roles:
  - name: HDFS_DATANODE
    friendlyName: "Data Node"
    labelPrefix: "hadoop-hdfs-datanode"
    env:
    - name: KRB_ENABLE
      value: 'false'
    - name: HDFS_HA_NAMENODE_SERVICE
      value: |
        <#assign namenodes=[]>
        <#if service.nameservices?? && service.nameservices?size gt 0>
          <#list service.nameservices as ns>
            <#list service[ns]['HDFS_NAMENODE'] as namenode>
              <#assign namenodes += [namenode.hostname]>
            </#list>
          </#list>
        <#else>
          <#assign namenodes += service.roles.HDFS_NAMENODE[0]['hostname']>
        </#if>
        ${namenodes?join(",")}
    - name: HDFS_JOURNAL_NODE_SPEC
      value: |
        <#assign journalnodes=[]>
        <#if service.roles.HDFS_JOURNALNODE?? && service.roles.HDFS_JOURNALNODE?size gt 0>
          <#list service.roles.HDFS_JOURNALNODE as journalnode>
            <#assign journalnodes += [journalnode.hostname]>
          </#list>
        </#if>
        ${service.roles.HDFS_JOURNALNODE[0]['hostname']}
    - name: HADOOP_CONF_DIR
      value: /etc/${service.sid}/conf
    - name: DATA_DIRS
      value: ${service['dfs.datanode.data.dir']?trim}
    - name: HEAP_SIZE
      value: ${service['datanode.memory']?trim}m
    - name: SOCKETDIR
      value: /var/run/${service.sid}
    mountPath:
    - mountPath: /etc/${service.sid}/conf
      hostPath: /etc/${service.sid}/conf
      name: hdfs
    - mountPath: /var/run/hadoop-common
      hostPath: /root/docker/common
      name: socketdir
    - mountPath: /var/transwarp/logs
      hostPath: /var/log/${service.sid}
      name: log
    - mountPath: /var/run/${service.sid}
      hostPath: /var/run/${service.sid}
      name: hdfssocketdir
    - mountPath: /hadoop/data
      hostPath: /hadoop/data
      name: datanodedir
    summaryPolicy: SOME
    autoAssign:
      - advice: !<EachNode> {}
    suggestion:
      - criteria: !<Range>
          min: 3
    validation:
      - criteria: !<Range>
          min: 1
    operations:
    - type: Install
      directives:
      - directive: !<mkdirs>
          paths: ["/etc/${service.sid}", "/etc/${service.sid}/conf", "/var/${service.sid}", "/var/log/${service.sid}"]
          mode: "755"
    - type: Config
      directives:
      - directive: !<resource>
          templateType: Raw
          templatePath: "log4j.properties"
          targetPath: "/etc/${service.sid}/conf/log4j.properties"
          mode: "755"
      - directive: !<resource>
          templateType: Raw
          templatePath: "hadoop-metrics2-datanode.properties"
          targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-datanode.properties"
          mode: "755"
      - directive: !<resource>
          templateType: Raw
          templatePath: "hadoop-metrics2-namenode.properties"
          targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-namenode.properties"
          mode: "755"
      - directive: !<resource>
            templateType: FreeMarker
            templatePath: "core-site.ftlx"
            targetPath: "/etc/${service.sid}/conf/core-site.xml"
            mode: "755"
      - directive: !<resource>
            templateType: FreeMarker
            templatePath: "hdfs-site.ftlx"
            targetPath: "/etc/${service.sid}/conf/hdfs-site.xml"
            mode: "755"
      - directive: !<resource>
          templateType: FreeMarker
          templatePath: "hadoop-env.sh"
          targetPath: "/etc/${service.sid}/conf/hadoop-env.sh"
          mode: "755"
  - name: HDFS_NAMENODE
    friendlyName: "Name Node"
    labelPrefix: "hadoop-hdfs-namenode"
    env:
    - name: KRB_ENABLE
      value: 'false'
    - name: HDFS_HA_NAMENODE_SERVICE
      value: |
        <#assign namenodes=[]>
        <#if service.nameservices?? && service.nameservices?size gt 0>
          <#list service.nameservices as ns>
            <#list service[ns]['HDFS_NAMENODE'] as namenode>
              <#assign namenodes += [namenode.hostname]>
            </#list>
          </#list>
        <#else>
          <#assign namenodes += service.roles.HDFS_NAMENODE[0]['hostname']>
        </#if>
        ${namenodes?join(",")}
    - name: HDFS_JOURNAL_NODE_SPEC
      value: |
        <#assign journalnodes=[]>
        <#if service.roles.HDFS_JOURNALNODE?? && service.roles.HDFS_JOURNALNODE?size gt 0>
          <#list service.roles.HDFS_JOURNALNODE as journalnode>
            <#assign journalnodes += [journalnode.hostname]>
          </#list>
        </#if>
        ${service.roles.HDFS_JOURNALNODE[0]['hostname']}
    - name: HADOOP_CONF_DIR
      value: /etc/${service.sid}/conf
    - name: DATA_DIRS
      value: ${service['dfs.namenode.name.dir']?trim}
    - name: HEAP_SIZE
      value: ${service['namenode.memory']?trim}m
    - name: SOCKETDIR
      value: /var/run/${service.sid}
    - name: CLUSTER
      value: ${service.sid}
    mountPath:
    - mountPath: /var/transwarp/logs
      hostPath: /var/log/${service.sid}
      name: log
    - mountPath: /etc/${service.sid}/conf
      hostPath: /etc/${service.sid}/conf
      name: hdfs
    - mountPath: /var/run/hadoop-common
      hostPath: /root/docker/common
      name: socketdir
    - mountPath: /var/transwarp/data
      hostPath: /var/namenode_format/
      name: format
    - mountPath: /etc/transwarp/conf/
      hostPath: /etc/transwarp/conf/
      name: topology
    - mountPath: /var/run/${service.sid}
      hostPath: /var/run/${service.sid}
      name: hdfssocketdir
    - mountPath: /hadoop/namenode_dir
      hostPath: /hadoop/namenode_dir
      name: namenodedir1
    - mountPath: /hadoop/hadoop_image
      hostPath: /hadoop/hadoop_image
      name: namenodedir2
    summaryPolicy: SOME
    autoAssign: []
    suggestion:
      - criteria: !<Range>
          min: 0
          max: 0
    validation:
      - when: !<WhenRoleGroup>
          fieldName: nameservices
          inRange: {"min": 0, "max": 0}
        criteria: !<Range>
          min: 1
          max: 1
      - when: !<WhenRoleGroup>
          fieldName: nameservices
          inRange: {"min": 1}
        criteria: !<Range>
          min: 0,
          max: 0
    operations:
      - type: Install
        directives:
        - directive: !<mkdirs>
            paths: ["/etc/${service.sid}", "/etc/${service.sid}/conf", "/var/${service.sid}", "/var/log/${service.sid}"]
            mode: "755"
      - type: Config
        directives:
        - directive: !<resource>
            templateType: Raw
            templatePath: "log4j.properties"
            targetPath: "/etc/${service.sid}/conf/log4j.properties"
            mode: "755"
        - directive: !<resource>
            templateType: Raw
            templatePath: "hadoop-metrics2-datanode.properties"
            targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-datanode.properties"
            mode: "755"
        - directive: !<resource>
            templateType: Raw
            templatePath: "hadoop-metrics2-namenode.properties"
            targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-namenode.properties"
            mode: "755"
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "core-site.ftlx"
            targetPath: "/etc/${service.sid}/conf/core-site.xml"
            mode: "755"
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "hdfs-site.ftlx"
            targetPath: "/etc/${service.sid}/conf/hdfs-site.xml"
            mode: "755"
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "exclude-list.txt"
            targetPath: "/etc/${service.sid}/conf/exclude-list.txt"
            mode: "755"
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "hadoop-env.sh"
            targetPath: "/etc/${service.sid}/conf/hadoop-env.sh"
            mode: "755"
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "hadoop-hdfs-env.ftlsh"
            targetPath: "/etc/${service.sid}/conf/hadoop-hdfs-env.sh"
            mode: "755"
roleGroups:
  - fieldName: nameservices
    namePrefix: nameservice
    friendlyName: "Name Service"
    autoAssign:
      - advice: !<NumSeq> {"numSeq": [1]}
    suggestion:
      - criteria: !<Range> {"min": 1}
    validation:
      - when: !<WhenRoleType>
          roleType: HDFS_NAMENODE
          inRange: {"min": 0, "max": 0}
        criteria: !<Range> {"min": 1}
      - when: !<WhenRoleType>
          roleType: HDFS_NAMENODE
          inRange: {"min": 1}
        criteria: !<Range>
          min: 0
          max: 0
    roles:
      - name: HDFS_NAMENODE
        friendlyName: "Name Node"
        labelPrefix: "hadoop-hdfs-namenode"
        env:
        - name: KRB_ENABLE
          value: 'false'
        - name: HDFS_HA_NAMENODE_SERVICE
          value: |
            <#assign namenodes=[]>
            <#if service.nameservices?? && service.nameservices?size gt 0>
              <#list service.nameservices as ns>
                <#list service[ns]['HDFS_NAMENODE'] as namenode>
                  <#assign namenodes += [namenode.hostname]>
                </#list>
              </#list>
            <#else>
              <#assign namenodes += service.roles.HDFS_NAMENODE[0]['hostname']>
            </#if>
            ${namenodes?join(",")}
        - name: HDFS_JOURNAL_NODE_SPEC
          value: |
            <#assign journalnodes=[]>
            <#if service.roles.HDFS_JOURNALNODE?? && service.roles.HDFS_JOURNALNODE?size gt 0>
              <#list service.roles.HDFS_JOURNALNODE as journalnode>
                <#assign journalnodes += [journalnode.hostname]>
              </#list>
            </#if>
            ${service.roles.HDFS_JOURNALNODE[0]['hostname']}
        - name: HADOOP_CONF_DIR
          value: /etc/${service.sid}/conf
        - name: DATA_DIRS
          value: ${service['dfs.namenode.name.dir']}
        - name: HEAP_SIZE
          value: ${service['namenode.memory']}m
        - name: SOCKETDIR
          value: /var/run/${service.sid}
        - name: CLUSTER
          value: ${service.sid}
        mountPath:
        - mountPath: /var/transwarp/logs
          hostPath: /var/log/${service.sid}
          name: log
        - mountPath: /etc/${service.sid}/conf
          hostPath: /etc/${service.sid}/conf
          name: hdfs
        - mountPath: /var/run/hadoop-common
          hostPath: /root/docker/common
          name: socketdir
        - mountPath: /var/transwarp/data
          hostPath: /var/namenode_format/
          name: format
        - mountPath: /etc/transwarp/conf/
          hostPath: /etc/transwarp/conf/
          name: topology
        - mountPath: /var/run/${service.sid}
          hostPath: /var/run/${service.sid}
          name: hdfssocketdir
        - mountPath: /hadoop/namenode_dir
          hostPath: /hadoop/namenode_dir
          name: namenodedir1
        - mountPath: /hadoop/hadoop_image
          hostPath: /hadoop/hadoop_image
          name: namenodedir2
        containers: ["HDFS_NAMENODE", "HDFS_ZKFC"]
        summaryPolicy: ALL
        autoAssign:
          - advice: !<NumSeq>
              numSeq: [2, 1]
              mates: ["LICENSE_NODE"]
        suggestion:
          - criteria: !<Range> {"min": 2, "max": 2}
        validation:
          - criteria: !<Range> {"min": 1, "max": 2}
        operations:
          - type: Install
            directives:
            - directive: !<mkdirs>
                paths: ["/etc/${service.sid}", "/etc/${service.sid}/conf", "/var/${service.sid}", "/var/log/${service.sid}"]
                mode: "755"
          - type: Config
            directives:
            - directive: !<resource>
                templateType: Raw
                templatePath: "log4j.properties"
                targetPath: "/etc/${service.sid}/conf/log4j.properties"
                mode: "755"
            - directive: !<resource>
                templateType: Raw
                templatePath: "hadoop-metrics2-datanode.properties"
                targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-datanode.properties"
                mode: "755"
            - directive: !<resource>
                templateType: Raw
                templatePath: "hadoop-metrics2-namenode.properties"
                targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-namenode.properties"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "core-site.ftlx"
                targetPath: "/etc/${service.sid}/conf/core-site.xml"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "hdfs-site.ftlx"
                targetPath: "/etc/${service.sid}/conf/hdfs-site.xml"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "exclude-list.txt"
                targetPath: "/etc/${service.sid}/conf/exclude-list.txt"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "hadoop-env.sh"
                targetPath: "/etc/${service.sid}/conf/hadoop-env.sh"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "hadoop-hdfs-env.ftlsh"
                targetPath: "/etc/${service.sid}/conf/hadoop-hdfs-env.sh"
                mode: "755"
      - name: HDFS_JOURNALNODE
        friendlyName: "Journal Node"
        labelPrefix: "hadoop-hdfs-journalnode"
        env:
        - name: KRB_ENABLE
          value: "false"
        - name: HADOOP_PID_DIR
          value: /var/run/${service.sid}/
        - name: HADOOP_CONF_DIR
          value: /etc/${service.sid}/conf
        - name: DATA_DIRS
          value: /hadoop/journal
        - name: HEAP_SIZE
          value: ${service['journalnode.memory']}m
        mountPath:
        - mountPath: /etc/${service.sid}/conf
          hostPath: /etc/${service.sid}/conf
          name: hdfs
        - mountPath: /var/run/hadoop-common
          hostPath: /root/docker/common
          name: socketdir
        - mountPath: /var/transwarp/logs
          hostPath: /var/log/${service.sid}
          name: log
        - mountPath: /hadoop/journal
          hostPath: /hadoop/journal
          name: journaldir
        summaryPolicy: MAJOR
        autoAssign:
          - when: !<WhenRoleType>
              roleType: HDFS_NAMENODE
              inRange: {"min": 2}
            advice: !<NumSeq>
              numSeq: [3, 1]
              mates: ["HDFS_NAMENODE"]
        suggestion:
          - when: !<WhenRoleType>
              roleType: HDFS_NAMENODE
              inRange: {"min": 2}
            criteria: !<Range>
              min: 3
              oddity: true
        validation:
          - when: !<WhenRoleType>
              roleType: HDFS_NAMENODE
              inRange: {"min": 1, "max": 1}
            criteria: !<Range>
              min: 0
              max: 0
          - when: !<WhenRoleType>
              roleType: HDFS_NAMENODE
              inRange: {"min": 2}
            criteria: !<Range> {"min": 1}
        operations:
          - type: Install
            directives:
            - directive: !<mkdirs>
                paths: ["/etc/${service.sid}", "/etc/${service.sid}/conf", "/var/${service.sid}", "/var/log/${service.sid}"]
                mode: "755"
          - type: Config
            directives:
            - directive: !<resource>
                templateType: Raw
                templatePath: "log4j.properties"
                targetPath: "/etc/${service.sid}/conf/log4j.properties"
                mode: "755"
            - directive: !<resource>
                templateType: Raw
                templatePath: "hadoop-metrics2-datanode.properties"
                targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-datanode.properties"
                mode: "755"
            - directive: !<resource>
                templateType: Raw
                templatePath: "hadoop-metrics2-namenode.properties"
                targetPath: "/etc/${service.sid}/conf/hadoop-metrics2-namenode.properties"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "core-site.ftlx"
                targetPath: "/etc/${service.sid}/conf/core-site.xml"
                mode: "755"
            - directive: !<resource>
                templateType: FreeMarker
                templatePath: "hdfs-site.ftlx"
                targetPath: "/etc/${service.sid}/conf/hdfs-site.xml"
                mode: "755"

    others:
    - key: mountPoints
      optional: true

product: Hadoop
