<#assign
  registryServer=dependencies.REGISTRY.roles['REGISTRY_SERVER'][0].hostname
  registryPort=dependencies.REGISTRY['registry.port']
  >
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: hadoop-hdfs-namenode-format-${service.sid}-${localhostname}
  name: hadoop-hdfs-namenode-format-${service.sid}-${localhostname}
  namespace: default
spec:
    containers:
    - args:
      - bootstrap.sh
      - namenode_format
      env:
      #  - name: DEBUG
      #    value: "1"
        - name: KRB_ENABLE
          value: "false"
        - name: HADOOP_HA_NAMENODE_SERVICE
          value: tos1,tos2
        - name: HDFS_JOURNAL_NODE_SPEC
          value: valid
        - name: DFS_REPLICATION
          value: "2"
        - name: HDFS_HA
          value: "true"
        - name: REPLICATION_JOB_ID
          value: "0"
        - name: SPEC
          value: 0.0.0.0
        - name: HADOOP_CONF_DIR
          value: /etc/hdfs2/conf
        - name: DATA_DIRS
          value: /hadoop/namenode_dir,/hadoop/namenode_dir
      image: ${registryServer}:${registryPort}/jenkins/hdfs
      imagePullPolicy: Always
      name: hdfsnamenodeha
      volumeMounts:
      - mountPath: /etc/hdfs/conf
        name: hdfs
      - mountPath: /var/run/hadoop-common
        name: socketdir
      - mountPath: /var/transwarp/logs
        name: log
      - mountPath: /hadoop/namenode_dir
        name: namenodedir
      - mountPath: /var/transwarp/data
        name: format
    restartPolicy: OnFailure
    volumes:
    - hostPath:
        path: /hadoop_docker
      name: namenodedir
    - hostPath:
        path: /var/log/${service.sid}
      name: log
    - hostPath:
        path: /etc/${service.sid}/conf
      name: hdfs
    - hostPath:
        path: /root/docker/common
      name: socketdir
    hostNetwork: true
    nodeName: ${localhostname}
