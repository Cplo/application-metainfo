---
name: KAFKA
version: 0.8-tdh50
global: false
namePrefix: Kafka
friendlyName: "Kafka"
dependencies:
  - name: ZOOKEEPER
    minVersion: 3.4.5-tdh50
    maxVersion: 3.4.5-tdh50
    optional: false
dockerImage: "transwarp/kafka:tdh500"
user: kafka
roles:
- name: KAFKA_SERVER
  friendlyName: "Kafka Server"
  labelPrefix: "kafka-server"
  category: SLAVE
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  env:
  - name: TRANSWARP_ZOOKEEPER_QUORUM
    value: |
      <#assign zookeepers=[]>
      <#if dependencies.ZOOKEEPER?? && dependencies.ZOOKEEPER.roles.ZOOKEEPER?? && dependencies.ZOOKEEPER.roles.ZOOKEEPER?size gt 0>
        <#list dependencies.ZOOKEEPER.roles.ZOOKEEPER as zookeeper>
          <#assign zookeepers += [zookeeper.hostname]>
        </#list>
      </#if>
      ${zookeepers?join(",")}
  - name: KAFKA_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths:
  - mountPath: /var/log/${service.sid}
    hostPath: /var/log/${service.sid}
    name: log
  - mountPath: /etc/${service.sid}/conf
    hostPath: /etc/${service.sid}/conf
    name: conf
  resources:
    limitsMemoryKey: kafka.container.limits.memory
    limitsCpuKey: kafka.container.limits.cpu
    requestsMemoryKey: kafka.container.requests.memory
    requestsCpuKey: kafka.container.requests.cpu
  nodeSpecificMounts:
  - configKey: kmq.log.dirs
  summaryPolicy: SOME
  autoAssign:
  - advice: !<EachNode> {}
  suggestion:
  - criteria: !<EachNode> {}
  validation:
  - criteria: !<EachNode> {}
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
        paths: ["/etc/${service.sid}", "/etc/${service.sid}/conf", "/var/${service.sid}", "/var/log/${service.sid}"]
        mode: "755"

firstWizardConfigs:
- listeners
- advertised.listeners
- delete.topic.enable
- kmq.log.dirs
- zookeeper.connection.timeout.ms
- zookeeper.connection.timeout.ms
- kafka.container.limits.memory
- kafka.container.limits.cpu
- kafka.container.requests.memory
- kafka.container.requests.cpu
- kafka.memory.ratio

pages:
- roles
- configuration
- operation
- security

principals:
- kafka

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 5
  method: !<K8sPod> {}
- category: VITAL_SIGN_CHECK
  intervalSeconds: 10
  method: !<Builtin> {}
