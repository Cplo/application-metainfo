---
name: LICENSE_SERVICE
version: 1.0
global: true
# compatible with legacy init.d script name "zookeeper-server-transwarp_license_cluster"
namePrefix: Transwarp_License_Cluster
friendlyName: "License Service"
dependencies: []
packages: ["zookeeper"]
dockerImage: "tos/zookeeper:rb465-final-tdh-2"
user: zookeeper
roles:
- name: LICENSE_NODE
  friendlyName: "License Node"
  # compatible with legacy init.d script name "zookeeper-server-transwarp_license_cluster"
  labelPrefix: "zookeeper-server"
  category: MASTER
  env:
  - name: USE_EXTERNAL_CONFIG
    value: "true"
  - name: TRANSWARP_DATA_HOME
    value: /var/${service.sid}
  - name: HEAP_SIZE
    value: ${service['zookeeper.server.memory']}m
  mountPath:
  - mountPath:  /var/log/${service.sid}
    hostPath: /var/log/${service.sid}
    name: log
  - mountPath: /etc/zookeeper/conf
    hostPath: /etc/${service.sid}/conf
    name: zookeeper
  - mountPath: /var/${service.sid}
    hostPath: /var/${service.sid}
    name: data
  summaryPolicy: MAJOR
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [5, 3, 1]}
  suggestion:
  - criteria: !<Range> {"min": 3, "oddity": true}
  validation:
  - criteria: !<Range> {"min": 1}
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
        paths: ["/etc/${service.sid}", "/etc/${service.sid}/conf", "/var/${service.sid}", "/var/run/${service.sid}", "/var/log/${service.sid}"]
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "zookeeper-server.ftlsh"
        targetPath: "/etc/init.d/zookeeper-server-${service.sid}"
        mode: "755"
        owner: "root"
        group: "root"
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "myid"
        targetPath: "/var/${service.sid}/myid"
        mode: "755"
stages:
  - type: Start
    taskGroups:
    - !<Role>
      summaryPolicy: SOME
      timeoutMinutes: 10
      roleType: LICENSE_NODE
      operation: Start
    - !<Upload-License>
      summaryPolicy: ALL
      timeoutMinutes: 10

firstWizardConfigs:
- tickTime
- initLimit
- syncLimit
- zookeeper.client.port
- zookeeper.peer.communicate.port
- zookeeper.leader.elect.port

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 5
  method: !<K8sPod> {}
