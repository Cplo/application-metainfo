<#assign
  registryServer=dependencies.REGISTRY.roles['REGISTRY_SERVER'][0].hostname
  registryPort=dependencies.REGISTRY['registry.port']
  >
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: license-node-${service.sid}
  name: license-node-${service.sid}
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: license-node-${service.sid}
        podConflictName: license-node-${service.sid}
    spec:
      hostNetwork: true
      containers:
      - args:
        - bootstrap.sh
        - zookeeper
        env:
        - name: USE_EXTERNAL_CONFIG
          value: "true"
        - name: TRANSWARP_DATA_HOME
          value: /var/${service.sid}
        - name: HEAP_SIZE
          value: ${service['zookeeper.server.memory']}m
        image: ${registryServer}:${registryPort}/jenkins/zookeeper
        imagePullPolicy: Always
        name: license-node-${service.sid}
        # The path mounts on docker
        volumeMounts:
          - mountPath: /var/transwarp/logs
            name: log
          - mountPath: /etc/zookeeper/conf
            name: zookeeper
          - mountPath: /var/${service.sid}
            name: data
      # Ensure that a node can have one zookeeper-server at most
      podConflictSelectors:
      - matchExpressions:
        - key: podConflictName
          operator: "="
          values:
          - "license-node-${service.sid}"
      # Ensure that only the node labeled "zookeeper-server=true" can start a zookeeper role (i.e., a pod)
      nodeSelector:
        license-node-${service.sid}: "true"
      # The path on real node
      volumes:
      - hostPath:
          path: /var/log/${service.sid}
        name: log
      - hostPath:
          path: /etc/${service.sid}/conf
        name: zookeeper
      - hostPath:
          path: /var/${service.sid}
        name: data
