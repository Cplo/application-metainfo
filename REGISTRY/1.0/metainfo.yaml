---
name: REGISTRY
version: 1.0
global: true
namePrefix: Registry
friendlyName: "Registry"
dependencies: []
user: root
roles:
- name: REGISTRY_SERVER
  friendlyName: "Registry Server"
  linkExpression: "http://${localhostname}:${service['registry.ui.port']}/"
  category: MASTER
  summaryPolicy: SOME
  autoAssign:
  - advice: !<NumSeq>
      numSeq: [1]
      mates: ["TRANSWARP_MANAGER_MASTER"] #REGISTRY_SERVER is strictly adhered to Manager
  suggestion:
  - criteria: !<Range> {"min": 1, "max": 1}
  validation:
  - criteria: !<Range> {"min": 1, "max": 1} #TODO must at TRANSWARP_MANAGER_MASTER nodes
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
        paths: ["/etc/${service.sid}/conf"]
        mode: "755"
    - directive: !<mkdirs>
        paths: ["/srv/kubernetes"]
        mode: "700"
    - directive: !<resource>
        templateType: Raw
        templatePath: "config.yml"
        targetPath: "/etc/${service.sid}/config.yml"
        mode: "755"
    - directive: !<download>
        url: "${transwarpRepo}/registry/registry.tar.gz"
        targetPath: "/etc/${service.sid}/registry.tar.gz"
    - directive: !<shell>
        script: "docker load -i /etc/${service.sid}/registry.tar.gz"
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "docker-registry.yml"
        targetPath: "/etc/${service.sid}/docker-registry.yml"
        mode: "755"
  - type: Start
    directives:
    - directive: !<docker-compose>
        action: Up
        file: "/etc/${service.sid}/docker-registry.yml"
  - type: Stop
    directives:
    - directive: !<docker-compose>
        action: Stop
        file: "/etc/${service.sid}/docker-registry.yml"

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 5
  method: !<DockerPs>
    imageMap:
      REGISTRY_SERVER: ["docker-registry-frontend", "registry:"]
- category: VITAL_SIGN_CHECK
  intervalSeconds: 10
  method: !<Builtin> {}

firstWizardConfigs:
- registry.ui.port
- registry.port
