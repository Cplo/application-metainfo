<#assign
  registryServer=dependencies.REGISTRY.roles['REGISTRY_SERVER'][0].hostname
  registryPort=dependencies.REGISTRY['registry.port']
  etcd_initial_servers=[] etcd_servers=[]
>
<#list service.roles.TOS_MASTER as tos_master>
<#assign etcd_servers+=["http://" + tos_master.hostname + ":" + service['tos.master.etcd.port']]>
<#assign etcd_initial_servers+=["ETCD"+ tos_master.id + "=http://" + tos_master.hostname + ":" + service['tos.master.leader.elect.port']]>
</#list>
etcd:
  image: ${registryServer}:${registryPort}/jenkins/etcd:live
  net: host
  privileged: true
  restart: always
  command:
    - etcd
    - --data-dir=/var/etcd/data
  volumes:
    - /var/etcd/data:/var/etcd/data
  environment:
# for tos ha
  - ETCD_NAME=ETCD${.data_model['role.id']}
  - ETCD_INITIAL_CLUSTER_STATE=new
  - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
  - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://${localhostname}:${service['tos.master.leader.elect.port']}
  - ETCD_INITIAL_CLUSTER=${etcd_initial_servers?join(",")}
  - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:${service['tos.master.leader.elect.port']}
  - ETCD_ADVERTISE_CLIENT_URLS=http://${localhostname}:${service['tos.master.etcd.port']}
  - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:${service['tos.master.etcd.port']}
  - DATA_DIR=/var/etcd/data

apiserver:
  image: ${registryServer}:${registryPort}/jenkins/hyperkube:tos1.2
  net: host
  privileged: true
  restart: always
  command:
    - boot.sh
    - apiserver
  volumes:
    - /var/log/kubernetes/apiserver:/var/log/kubernetes/apiserver
    - /srv/kubernetes:/srv/kubernetes
    - /etc/transwarp/conf:/etc/transwarp/conf
  environment:
  - V=4
  - ETCD_SERVERS=${etcd_servers?join(',')}
  - ETCD_PORT=${service['tos.master.leader.elect.port']}
  - APISERVER_COUNT=${service.roles.TOS_MASTER?size}
  - INSECURE_BIND_ADDRESS=0.0.0.0
  - INSECURE_PORT=${service['tos.master.apiserver.port']}
  - BIND_ADDRESS=0.0.0.0
  - SECURE_PORT=${service['tos.master.apiserver.secure.port']}
  - RUNTIME_CONFIG=api/v1
  - ALLOW_PRIVILEGED=true
  - CORS_ALLOWED_ORIGINS=.*
  - ADMISSION_CONTROL=ServiceAccount,ResourceQuota
  - SERVICE_CLUSTER_IP_RANGE=10.10.10.0/24
  - CLIENT_CA_FILE=/srv/kubernetes/ca.crt
  - TLS_CERT_FILE=/srv/kubernetes/server.cert
  - TLS_PRIVATE_KEY_FILE=/srv/kubernetes/server.key
  - ALSOLOGTOSTDERR=true
  - LOGTOSTDERR=false
  - LOG_DIR=/var/log/kubernetes/apiserver

controller:
  image: ${registryServer}:${registryPort}/jenkins/hyperkube:tos1.2
  net: host
  privileged: true
  restart: always
  command:
    - boot.sh
    - controller
  volumes:
    - /var/log/kubernetes/controller:/var/log/kubernetes/controller
    - /srv/kubernetes:/srv/kubernetes
    - /etc/transwarp/conf:/etc/transwarp/conf
  environment:
  - V=4
  - LEADER_ELECT=true
  - MASTER=127.0.0.1:${service['tos.master.apiserver.port']}
  - ROOT_CA_FILE=/srv/kubernetes/ca.crt
  - SERVICE_ACCOUNT_PRIVATE_KEY_FILE=/srv/kubernetes/server.key
  - ALSOLOGTOSTDERR=true
  - LOGTOSTDERR=false
  - LOG_DIR=/var/log/kubernetes/controller
  - ADDRESS=0.0.0.0
  - PORT=${service['tos.master.controller.port']}

scheduler:
  image: ${registryServer}:${registryPort}/jenkins/hyperkube:tos1.2
  net: host
  privileged: true
  restart: always
  command:
    - boot.sh
    - scheduler
  volumes:
    - /var/log/kubernetes/scheduler:/var/log/kubernetes/scheduler
    - /srv/kubernetes:/srv/kubernetes
    - /etc/transwarp/conf:/etc/transwarp/conf
  environment:
  - MASTER=127.0.0.1:${service['tos.master.apiserver.port']}
  - LEADER_ELECT=true
  - ALSOLOGTOSTDERR=true
  - LOGTOSTDERR=false
  - LOG_DIR=/var/log/kubernetes/scheduler
  - ADDRESS=0.0.0.0
  - PORT=${service['tos.master.scheduler.port']}
