<#assign
  registryServer=dependencies.REGISTRY.roles['REGISTRY_SERVER'][0].hostname
  registryPort=dependencies.REGISTRY['registry.port']
  etcd_initial_servers=[] etcd_servers=[]
>
<#list service.roles.TOS_MASTER as tos_master>
<#assign etcd_servers+=["http://" + tos_master.hostname + ":" + service['tos.master.etcd.port']]>
<#assign etcd_initial_servers+=["ETCD"+ tos_master.id + "=http://" + tos_master.hostname + ":" + service['tos.master.leader.elect.port']]>
</#list>
etcd:
  image: ${registryServer}:${registryPort}/transwarp/etcd:tdh500
  net: host
  privileged: true
  restart: always
  command:
    - etcd
    - --data-dir=/var/etcd/data
    - --heartbeat-interval=${service['tos.master.etcd.heartbeat.interval']}
    - --election-timeout=${service['tos.master.etcd.election.timeout']}
  volumes:
    - /var/etcd/data:/var/etcd/data
  environment:
# for tos ha
  - ETCD_NAME=ETCD${.data_model['role.id']}
  - ETCD_INITIAL_CLUSTER_STATE=new
  - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
  - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://${localhostname}:${service['tos.master.leader.elect.port']}
  - ETCD_INITIAL_CLUSTER=${etcd_initial_servers?join(",")}
  - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:${service['tos.master.leader.elect.port']}
  - ETCD_ADVERTISE_CLIENT_URLS=http://${localhostname}:${service['tos.master.etcd.port']}
  - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:${service['tos.master.etcd.port']}
  - DATA_DIR=/var/etcd/data

apiserver:
  image: ${registryServer}:${registryPort}/transwarp/hyperkube:tdh500
  net: host
  privileged: true
  restart: always
  command:
    - boot.sh
    - apiserver
  volumes:
    - /var/log/kubernetes/apiserver:/var/log/kubernetes/apiserver
    - /srv/kubernetes:/srv/kubernetes
    - /etc/transwarp/conf:/etc/transwarp/conf
  environment:
  - ETCD_SERVERS=${etcd_servers?join(',')}
  - APISERVER_PARAMS="
    --v=4
    --etcd_servers=${etcd_servers?join(',')}
    --apiserver-count=${service.roles.TOS_MASTER?size}
    --insecure-bind-address=0.0.0.0
    --insecure-port=${service['tos.master.apiserver.port']}
    --bind-address=0.0.0.0
    --secure-port=${service['tos.master.apiserver.secure.port']}
    --runtime_config=api/v1
    --allow_privileged=true
    --cors_allowed_origins=.*
    --admission_control=ServiceAccount,ResourceQuota
    --service-cluster-ip-range=10.10.10.0/24
    --client_ca_file=/srv/kubernetes/ca.crt
    --tls_cert_file=/srv/kubernetes/server.cert
    --tls_private_key_file=/srv/kubernetes/server.key
    --alsologtostderr=true
    --logtostderr=false
    --log_dir=/var/log/kubernetes/apiserver
    --basic-auth-file=/srv/kubernetes/auth
    "

controller:
  image: ${registryServer}:${registryPort}/transwarp/hyperkube:tdh500
  net: host
  privileged: true
  restart: always
  command:
    - boot.sh
    - controller
  volumes:
    - /var/log/kubernetes/controller:/var/log/kubernetes/controller
    - /srv/kubernetes:/srv/kubernetes
    - /etc/transwarp/conf:/etc/transwarp/conf
  environment:
  - CONTROLLER_PARAMS="
    --v=4
    --leader-elect=true
    --root-ca-file=/srv/kubernetes/ca.crt
    --service-account-private-key-file=/srv/kubernetes/server.key
    --kubeconfig=/srv/kubernetes/kubeconfig
    --alsologtostderr=true
    --logtostderr=false
    --log_dir=/var/log/kubernetes/controller
    --address=0.0.0.0
    --port=${service['tos.master.controller.port']}
    "

scheduler:
  image: ${registryServer}:${registryPort}/transwarp/hyperkube:tdh500
  net: host
  privileged: true
  restart: always
  command:
    - boot.sh
    - scheduler
  volumes:
    - /var/log/kubernetes/scheduler:/var/log/kubernetes/scheduler
    - /srv/kubernetes:/srv/kubernetes
    - /etc/transwarp/conf:/etc/transwarp/conf
  environment:
  - SCHEDULER_PARAMS="
    --leader-elect=true
    --kubeconfig=/srv/kubernetes/kubeconfig
    --alsologtostderr=true
    --logtostderr=false
    --log_dir=/var/log/kubernetes/scheduler
    --address=0.0.0.0
    --port=${service['tos.master.scheduler.port']}
    "
