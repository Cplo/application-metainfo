<#assign
  registryServer=dependencies.REGISTRY.roles['REGISTRY_SERVER'][0].hostname
  registryPort=dependencies.REGISTRY['registry.port']
>
kubelet:
  image: ${registryServer}:${registryPort}/jenkins/hyperkube:tos1.2
  net: host
  pid: host
  privileged: true
  restart: always
  command:
    - hyperkube
    - kubelet
    - --logtostderr=false
    - --alsologtostderr=true
    - --v=4
    - --address=0.0.0.0
    - --cluster_dns=10.10.10.10
    - --cluster_domain=transwarp.local
    - --port=${service['tos.slave.kubelet.port']}
    - --healthz-port=${service['tos.slave.kubelet.healthzport']}
    - --api_servers=https://127.0.0.1:6443 #TODO 6443 should be configured
    - --kubeconfig=/srv/kubernetes/kubeconfig
#    - --hostname_override={{ inventory_hostname }}
    - --log_dir=/var/log/kubernetes/kubelet
    - --containerized=true
#    - --config=/etc/kubernetes/manifests-multi
    - --pod-infra-container-image=${registryServer}:${registryPort}/google_containers/pause:0.8.0
    - --disk_mount_dirs=/mnt/.*
    - --max-pods=200
    - --resolv-conf=/dev/null
    - --allow_privileged=true
    - --host-network-sources=*
  volumes:
    - /var/lib/docker:/var/lib/docker
    - /var/lib/kubelet:/var/lib/kubelet
    - /etc/kubernetes/manifests-multi:/etc/kubernetes/manifests-multi
    - /mnt:/mnt
    - /:/rootfs:ro
    - /sys:/sys
    - /var/run:/var/run
    - /var/log/kubernetes/kubelet:/var/log/kubernetes/kubelet
    - /srv/kubernetes:/srv/kubernetes
# for tos ha
haproxy:
  image: ${registryServer}:${registryPort}/jenkins/haproxy:live
  net: host
  pid: host
  privileged: true
  restart: always
  command:
    - /entrypoint.sh
  environment:
  <#list service.roles.TOS_MASTER as master>
    - HAPROXY_APISERVERS_S${master_index+1}=${master.hostname}:${service['tos.master.apiserver.secure.port']}
  </#list>
